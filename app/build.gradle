plugins {
    id("com.android.application")
    id("kotlin-android")
}
apply from: "$rootDir/buildSrc/scripts/common_config.gradle"

def mockkVersion = "1.13.3"
def forgeVersion = "1.3.1"

android {
    namespace 'net.davidcrotty.itemcatalogue'

    defaultConfig {
        applicationId = "net.davidcrotty.itemcatalogue"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules'
        }
    }

    buildFeatures {
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.7"
    }
}

dependencies { handler ->
    Utilities.addModules(
            handler,
            Modules.application,
            Modules.androidCommon,
            Modules.unitTest
    )

    // Structure as:

    // technologySpecific, ie: Compose, then
    // commonAndroid..
    // commonData..
    // commonFeature..

    // then specific module needs ie: detail/feeddata etc...

    // specific tech's make sense as they can be managed together/update together if not in a BOM (also module by feature wont work as gradle overrides, will create confusion).
    debugImplementation "androidx.compose.ui:ui-test-manifest"

    implementation project(":feature:detailscreen")
    implementation project(":domain:items")
    implementation project(":data")
    implementation project(":theme")

    testImplementation project(":core:unittest")

    androidTestImplementation platform("androidx.compose:compose-bom:2023.05.01")
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"

    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"
    androidTestImplementation "io.mockk:mockk-agent-jvm:$mockkVersion"
}